{"version":3,"sources":["logo.png","components/Welcome.js","components/Confirmation.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Welcome","_ref","email","onSend","subject","setSubject","useState","message","setMessage","subjectError","setSubjectError","messageError","setMessageError","wordCount","setWordCount","React","createElement","className","src","alt","aria-hidden","fill","focusable","width","height","viewBox","xmlns","d","concat","type","id","placeholder","value","onChange","e","target","required","htmlFor","split","filter","word","length","onClick","handleSend","valid","Confirmation","useEffect","timer","setTimeout","window","location","href","clearTimeout","App","page","setPage","inputValue","setInputValue","errorMessage","setErrorMessage","handleNextClick","validateEmailOrPhone","isBogusEmail","test","includes","toLowerCase","logo","onKeyDown","event","key","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f196a42a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.242fd305.png\";","import React, { useState } from 'react';\nimport './Welcome.css';\n\nconst Welcome = ({ email, onSend }) => {\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const [subjectError, setSubjectError] = useState('');\n  const [messageError, setMessageError] = useState('');\n  const [wordCount, setWordCount] = useState(0);\n\n  const handleSend = () => {\n    let valid = true;\n    if (!subject) {\n      setSubjectError('Please complete all required fields.');\n      valid = false;\n    } else {\n      setSubjectError('');\n    }\n\n    if (!message) {\n      setMessageError('Please complete all required fields.');\n      valid = false;\n    } else if (wordCount < 200) {\n      setMessageError('Please write 200 words before sending to avoid spam.');\n      valid = false;\n    } else {\n      setMessageError('');\n    }\n\n    if (valid) {\n      // Proceed with sending\n      onSend();\n    }\n  };\n\n  const handleMessageChange = (e) => {\n    const value = e.target.value;\n    setMessage(value);\n    setWordCount(value.split(' ').filter(word => word).length);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"left-section\">\n        <div className=\"logo-container\">\n          <img src=\"/logo.png\" alt=\"Logo\" className=\"logo\" />\n        </div>\n        <div className=\"text-container\">\n          <div className=\"sign-in-text\">Welcome</div>\n          <div className=\"dropdown-container\">\n            <div className=\"dropdown-content\">\n              <img src=\"/profile-icon.png\" alt=\"Profile Icon\" className=\"profile-icon\" />\n              <span className=\"email\">{email}</span>\n              <svg aria-hidden=\"true\" className=\"dropdown-arrow\" fill=\"currentColor\" focusable=\"false\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"https://www.w3.org/2000/svg\">\n                <path d=\"M7 10l5 5 5-5z\"></path>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"right-section\">\n        <div className=\"input-group\">\n          <div className={`input-container ${subjectError ? 'error' : ''}`}>\n            <input\n              type=\"text\"\n              id=\"subject\"\n              className=\"input\"\n              placeholder=\" \"\n              value={subject}\n              onChange={(e) => setSubject(e.target.value)}\n              required\n            />\n            <label htmlFor=\"subject\" className=\"input-label\">Subject</label>\n            {subjectError && (\n              <div className=\"error-message subject-error\">\n                <svg aria-hidden=\"true\" className=\"error-icon\" fill=\"currentColor\" focusable=\"false\" width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\" xmlns=\"https://www.w3.org/2000/svg\">\n                  <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"></path>\n                </svg>\n                {subjectError}\n              </div>\n            )}\n          </div>\n          <div className={`input-container message ${messageError ? 'error' : ''}`}>\n            <textarea\n              id=\"message\"\n              className=\"input\"\n              placeholder=\" \"\n              value={message}\n              onChange={handleMessageChange}\n              required\n            />\n            <label htmlFor=\"message\" className=\"input-label\">Message</label>\n            {messageError && (\n              <div className=\"error-message message-error\">\n                <svg aria-hidden=\"true\" className=\"error-icon\" fill=\"currentColor\" focusable=\"false\" width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\" xmlns=\"https://www.w3.org/2000/svg\">\n                  <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"></path>\n                </svg>\n                {messageError}\n              </div>\n            )}\n            <div className=\"word-count\">{wordCount} words</div>\n          </div>\n        </div>\n        <button className=\"next-button\" onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Welcome;\n","import React, { useEffect } from 'react';\nimport './Confirmation.css';\n\nconst Confirmation = () => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      window.location.href = 'https://jamieparishooper.com';\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className=\"confirmation-container\">\n      <h1>Your message has been sent!</h1>\n      <p>You will be redirected to the homepage shortly.</p>\n    </div>\n  );\n};\n\nexport default Confirmation;\n","import React, { useState } from 'react';\nimport './App.css';\nimport SignIn from './components/SignIn';\nimport Welcome from './components/Welcome';\nimport Confirmation from './components/Confirmation';\nimport logo from './logo.png';\n\nfunction App() {\n  const [page, setPage] = useState('signin');\n  const [inputValue, setInputValue] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleNextClick = () => {\n    if (!inputValue) {\n      setErrorMessage('Enter an email or phone number.');\n    } else if (!validateEmailOrPhone(inputValue)) {\n      setErrorMessage('Enter a valid email or phone number.');\n    } else if (isBogusEmail(inputValue)) {\n      setErrorMessage('Couldn\\'t find your Jamie Account');\n    } else {\n      setErrorMessage('');\n      setPage('welcome');\n    }\n  };\n\n  const validateEmailOrPhone = (value) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const phoneRegex = /^[0-9]{7,}$/;\n    return emailRegex.test(value) || phoneRegex.test(value);\n  };\n\n  const isBogusEmail = (value) => {\n    const bogusEmails = ['fuckyou@fuckyou.com'];\n    const bogusPhones = ['01234567'];\n    return bogusEmails.includes(value.toLowerCase()) || bogusPhones.includes(value);\n  };\n\n  const handleSend = () => {\n    setPage('confirmation');\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      handleNextClick();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {page === 'signin' && (\n        <div className=\"container\">\n          <div className=\"left-section\">\n            <div className=\"logo-container\">\n              <img src={logo} alt=\"Logo\" className=\"logo\" />\n            </div>\n            <div className=\"text-container\">\n              <div className=\"sign-in-text\">Contact me</div>\n              <div className=\"account-text\">Use your Jamie Account</div>\n            </div>\n          </div>\n          <div className=\"right-section\">\n            <div className=\"input-group\">\n              <div className={`input-container ${errorMessage ? 'error' : ''}`}>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  className=\"input\"\n                  placeholder=\" \"\n                  value={inputValue}\n                  onChange={(e) => setInputValue(e.target.value)}\n                  onKeyDown={handleKeyDown} // Ensure this is attached to the input\n                  required\n                />\n                <label htmlFor=\"email\" className=\"input-label\">Email or phone</label>\n              </div>\n              {errorMessage && (\n                <div className=\"error-message\">\n                  <svg aria-hidden=\"true\" className=\"error-icon\" fill=\"currentColor\" focusable=\"false\" width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\" xmlns=\"https://www.w3.org/2000/svg\">\n                    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"></path>\n                  </svg>\n                  {errorMessage}\n                </div>\n              )}\n              <a href=\"#\" className=\"forgot-email\">Forgot email?</a>\n            </div>\n            <div className=\"info-text\">\n              <p>Not your computer? Use Guest mode to sign in privately.</p>\n              <a href=\"#\" className=\"learn-more\">Learn more about using Guest mode</a>\n            </div>\n            <div className=\"actions\">\n              <button className=\"create-account\">Create account</button>\n              <button className=\"next-button\" onClick={handleNextClick}>Next</button>\n            </div>\n          </div>\n        </div>\n      )}\n      {page === 'welcome' && <Welcome email={inputValue} onSend={handleSend} />}\n      {page === 'confirmation' && <Confirmation />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}